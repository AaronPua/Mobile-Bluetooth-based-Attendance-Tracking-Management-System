// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<RegistrationScreen /> renders correctly 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RCTScrollView
    _text={
      Object {
        "color": "darkText",
      }
    }
    contentContainerStyle={
      Array [
        Object {},
        Object {
          "dataSet": Object {},
        },
      ]
    }
    dataSet={Object {}}
    style={
      Object {
        "backgroundColor": "#f1f5f9",
        "flex": 1,
      }
    }
  >
    <View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "backgroundColor": "#6200ee",
          }
        }
      />
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#6200ee",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": "100%",
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#FFFFFF",
                "fontFamily": undefined,
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 30,
                "textDecorationLine": undefined,
              }
            }
          >
            Registration
          </Text>
        </View>
      </View>
      <View
        dataSet={Object {}}
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "center",
            "width": "100%",
          }
        }
      >
        <View
          dataSet={Object {}}
          style={
            Object {
              "maxWidth": 290,
              "paddingBottom": 32,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 32,
              "width": "90%",
            }
          }
        >
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#1f2937",
                "fontFamily": undefined,
                "fontSize": null,
                "fontStyle": "normal",
                "fontWeight": "600",
                "letterSpacing": 0,
                "lineHeight": 30,
                "textDecorationLine": undefined,
              }
            }
          >
            Welcome
          </Text>
          <Text
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#4b5563",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 17.5,
                "marginTop": 4,
                "textDecorationLine": undefined,
              }
            }
          >
            Register to continue!
          </Text>
          <View
            dataSet={Object {}}
            style={
              Object {
                "marginTop": 20,
              }
            }
          >
            <View
              dataSet={Object {}}
              isInvalid={false}
              style={
                Object {
                  "marginBottom": 8,
                  "width": "100%",
                }
              }
            >
              <View
                dataSet={Object {}}
                feedbackId="field-react-aria-1-feedback"
                hasFeedbackText={false}
                hasHelpText={false}
                helpTextId="field-react-aria-1-helptext"
                isDisabled={false}
                isInvalid={false}
                isReadOnly={false}
                isRequired={false}
                labelId="field-react-aria-1-label"
                nativeID="field-react-aria-1-label"
                setHasFeedbackText={[Function]}
                setHasHelpText={[Function]}
                style={
                  Object {
                    "flexDirection": "row",
                    "justifyContent": "flex-start",
                    "marginBottom": 8,
                    "marginRight": 12,
                  }
                }
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "500",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  First Name
                </Text>
              </View>
              <TextInput
                accessibilityLabel="First Name"
                accessible={true}
                allowFontScaling={true}
                dataSet={Object {}}
                disabled={false}
                editable={true}
                isRequired={false}
                nativeID="field-react-aria-1"
                onBlur={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                onKeyPress={[Function]}
                placeholderTextColor="#a3a3a3"
                readOnly={false}
                rejectResponderTermination={true}
                required={false}
                secureTextEntry={false}
                selectionColor="#1f2937"
                style={
                  Array [
                    Object {
                      "borderColor": "#e5e5e5",
                      "borderRadius": 4,
                      "borderWidth": 1,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 12,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "overflow": "hidden",
                      "paddingBottom": 8,
                      "paddingLeft": 8,
                      "paddingRight": 8,
                      "paddingTop": 8,
                      "width": undefined,
                    },
                    Object {},
                  ]
                }
                underlineColorAndroid="transparent"
                value=""
              />
            </View>
            <View
              dataSet={Object {}}
              isInvalid={false}
              style={
                Object {
                  "marginBottom": 8,
                  "width": "100%",
                }
              }
            >
              <View
                dataSet={Object {}}
                feedbackId="field-react-aria-2-feedback"
                hasFeedbackText={false}
                hasHelpText={false}
                helpTextId="field-react-aria-2-helptext"
                isDisabled={false}
                isInvalid={false}
                isReadOnly={false}
                isRequired={false}
                labelId="field-react-aria-2-label"
                nativeID="field-react-aria-2-label"
                setHasFeedbackText={[Function]}
                setHasHelpText={[Function]}
                style={
                  Object {
                    "flexDirection": "row",
                    "justifyContent": "flex-start",
                    "marginBottom": 8,
                    "marginRight": 12,
                  }
                }
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "500",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Last Name
                </Text>
              </View>
              <TextInput
                accessibilityLabel="Last Name"
                accessible={true}
                allowFontScaling={true}
                dataSet={Object {}}
                disabled={false}
                editable={true}
                isRequired={false}
                nativeID="field-react-aria-2"
                onBlur={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                onKeyPress={[Function]}
                placeholderTextColor="#a3a3a3"
                readOnly={false}
                rejectResponderTermination={true}
                required={false}
                secureTextEntry={false}
                selectionColor="#1f2937"
                style={
                  Array [
                    Object {
                      "borderColor": "#e5e5e5",
                      "borderRadius": 4,
                      "borderWidth": 1,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 12,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "overflow": "hidden",
                      "paddingBottom": 8,
                      "paddingLeft": 8,
                      "paddingRight": 8,
                      "paddingTop": 8,
                      "width": undefined,
                    },
                    Object {},
                  ]
                }
                underlineColorAndroid="transparent"
                value=""
              />
            </View>
            <View
              dataSet={Object {}}
              isInvalid={false}
              style={
                Object {
                  "marginBottom": 8,
                  "width": "100%",
                }
              }
            >
              <View
                dataSet={Object {}}
                feedbackId="field-react-aria-3-feedback"
                hasFeedbackText={false}
                hasHelpText={false}
                helpTextId="field-react-aria-3-helptext"
                isDisabled={false}
                isInvalid={false}
                isReadOnly={false}
                isRequired={false}
                labelId="field-react-aria-3-label"
                nativeID="field-react-aria-3-label"
                setHasFeedbackText={[Function]}
                setHasHelpText={[Function]}
                style={
                  Object {
                    "flexDirection": "row",
                    "justifyContent": "flex-start",
                    "marginBottom": 8,
                    "marginRight": 12,
                  }
                }
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "500",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Gender
                </Text>
              </View>
              <View
                accessibilityLabel="Select Gender"
                accessibilityRole="button"
                accessible={true}
                collapsable={false}
                dataSet={Object {}}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onHoverIn={[Function]}
                onHoverOut={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={Object {}}
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "alignItems": "center",
                      "borderColor": "#e5e5e5",
                      "borderRadius": 4,
                      "borderWidth": 1,
                      "display": "flex",
                      "flexDirection": "row",
                      "justifyContent": "space-between",
                      "overflow": "hidden",
                    }
                  }
                >
                  <TextInput
                    accessible={true}
                    allowFontScaling={true}
                    aria-hidden={true}
                    dataSet={Object {}}
                    disabled={false}
                    editable={false}
                    focusable={false}
                    importantForAccessibility="no"
                    isDisabled={false}
                    isRequired={false}
                    nativeID="field-react-aria-3"
                    onBlur={[Function]}
                    onFocus={[Function]}
                    onKeyPress={[Function]}
                    placeholder="Select Gender"
                    placeholderTextColor="#a3a3a3"
                    pointerEvents="none"
                    readOnly={false}
                    rejectResponderTermination={true}
                    required={false}
                    secureTextEntry={false}
                    selectionColor="#1f2937"
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "color": "#1f2937",
                          "flex": 1,
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontStyle": "normal",
                          "fontWeight": "400",
                          "paddingBottom": 8,
                          "paddingLeft": 8,
                          "paddingRight": 8,
                          "paddingTop": 8,
                          "width": undefined,
                        },
                        Object {},
                      ]
                    }
                    underlineColorAndroid="transparent"
                    value="Male"
                    variant="unstyled"
                  />
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={24}
                    bbWidth={24}
                    color={4288914339}
                    dataSet={Object {}}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#a3a3a3",
                          "height": 24,
                          "paddingBottom": 4,
                          "paddingLeft": 0,
                          "paddingRight": 4,
                          "paddingTop": 4,
                          "width": 24,
                        },
                        Object {
                          "flex": 0,
                          "height": 24,
                          "width": 24,
                        },
                      ]
                    }
                    tintColor={4288914339}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGGroup
                          fill={
                            Array [
                              2,
                            ]
                          }
                          matrix={
                            Array [
                              6.123233995736766e-17,
                              1,
                              -1,
                              6.123233995736766e-17,
                              24,
                              0,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        >
                          <RNSVGPath
                            d="M0,0H24V24H0Z"
                            fill={null}
                            propList={
                              Array [
                                "fill",
                              ]
                            }
                          />
                          <RNSVGPath
                            d="M10,6,8.59,7.41,13.17,12,8.59,16.59,10,18l6-6Z"
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
            </View>
            <View
              dataSet={Object {}}
              isInvalid={false}
              style={
                Object {
                  "marginBottom": 8,
                  "width": "100%",
                }
              }
            >
              <View
                dataSet={Object {}}
                feedbackId="field-react-aria-4-feedback"
                hasFeedbackText={false}
                hasHelpText={false}
                helpTextId="field-react-aria-4-helptext"
                isDisabled={false}
                isInvalid={false}
                isReadOnly={false}
                isRequired={false}
                labelId="field-react-aria-4-label"
                nativeID="field-react-aria-4-label"
                setHasFeedbackText={[Function]}
                setHasHelpText={[Function]}
                style={
                  Object {
                    "flexDirection": "row",
                    "justifyContent": "flex-start",
                    "marginBottom": 8,
                    "marginRight": 12,
                  }
                }
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "500",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Email
                </Text>
              </View>
              <TextInput
                accessibilityLabel="Email Input"
                accessible={true}
                allowFontScaling={true}
                dataSet={Object {}}
                disabled={false}
                editable={true}
                isRequired={false}
                nativeID="field-react-aria-4"
                onBlur={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                onKeyPress={[Function]}
                placeholderTextColor="#a3a3a3"
                readOnly={false}
                rejectResponderTermination={true}
                required={false}
                secureTextEntry={false}
                selectionColor="#1f2937"
                style={
                  Array [
                    Object {
                      "borderColor": "#e5e5e5",
                      "borderRadius": 4,
                      "borderWidth": 1,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 12,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "overflow": "hidden",
                      "paddingBottom": 8,
                      "paddingLeft": 8,
                      "paddingRight": 8,
                      "paddingTop": 8,
                      "width": undefined,
                    },
                    Object {},
                  ]
                }
                underlineColorAndroid="transparent"
                value=""
              />
            </View>
            <View
              dataSet={Object {}}
              isInvalid={false}
              style={
                Object {
                  "marginBottom": 8,
                  "width": "100%",
                }
              }
            >
              <View
                dataSet={Object {}}
                feedbackId="field-react-aria-5-feedback"
                hasFeedbackText={false}
                hasHelpText={false}
                helpTextId="field-react-aria-5-helptext"
                isDisabled={false}
                isInvalid={false}
                isReadOnly={false}
                isRequired={false}
                labelId="field-react-aria-5-label"
                nativeID="field-react-aria-5-label"
                setHasFeedbackText={[Function]}
                setHasHelpText={[Function]}
                style={
                  Object {
                    "flexDirection": "row",
                    "justifyContent": "flex-start",
                    "marginBottom": 8,
                    "marginRight": 12,
                  }
                }
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "500",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Password
                </Text>
              </View>
              <TextInput
                accessibilityLabel="Password Input"
                accessible={true}
                allowFontScaling={true}
                dataSet={Object {}}
                disabled={false}
                editable={true}
                isRequired={false}
                nativeID="field-react-aria-5"
                onBlur={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                onKeyPress={[Function]}
                placeholderTextColor="#a3a3a3"
                readOnly={false}
                rejectResponderTermination={true}
                required={false}
                secureTextEntry={true}
                selectionColor="#1f2937"
                style={
                  Array [
                    Object {
                      "borderColor": "#e5e5e5",
                      "borderRadius": 4,
                      "borderWidth": 1,
                      "color": "#1f2937",
                      "fontFamily": undefined,
                      "fontSize": 12,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "overflow": "hidden",
                      "paddingBottom": 8,
                      "paddingLeft": 8,
                      "paddingRight": 8,
                      "paddingTop": 8,
                      "width": undefined,
                    },
                    Object {},
                  ]
                }
                underlineColorAndroid="transparent"
                value=""
              />
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "flexGrow": 1,
                    }
                  }
                />
              </View>
            </View>
            <View
              _text={
                Object {
                  "color": "lightText",
                }
              }
              accessibilityLabel="Register Button"
              accessibilityRole="button"
              accessible={true}
              collapsable={false}
              colorScheme="indigo"
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#6366f1",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginTop": 8,
                  "paddingBottom": 8,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 8,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={Object {}}
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#FFFFFF",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    Register
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Array [
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "display": "flex",
          "overflow": "hidden",
        },
      ]
    }
  >
    <View
      pointerEvents="none"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "transform": Array [
            Object {
              "translateY": 0,
            },
            Object {
              "translateX": 0,
            },
            Object {
              "scale": 1,
            },
            Object {
              "scaleX": 1,
            },
            Object {
              "scaleY": 1,
            },
            Object {
              "rotate": "0deg",
            },
          ],
        }
      }
    >
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessible={false}
        collapsable={false}
        dataSet={Object {}}
        focusable={true}
        importantForAccessibility="no"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "rgb(0, 0, 0)",
            "bottom": 0,
            "left": 0,
            "opacity": 0.3,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
    <View
      pointerEvents="none"
      style={
        Object {
          "bottom": 0,
          "height": "100%",
          "left": 0,
          "opacity": 1,
          "position": "absolute",
          "right": 0,
          "transform": Array [
            Object {
              "translateY": 0,
            },
            Object {
              "translateX": 0,
            },
            Object {
              "scale": 1,
            },
            Object {
              "scaleX": 1,
            },
            Object {
              "scaleY": 1,
            },
            Object {
              "rotate": "0deg",
            },
          ],
        }
      }
    >
      <View
        dataSet={Object {}}
        duration={200}
        in={false}
        onLayout={[Function]}
        overlay={false}
        pointerEvents="box-none"
        style={
          Object {
            "height": "100%",
            "opacity": 0,
          }
        }
      >
        <View
          closeOnOverlayClick={true}
          dataSet={Object {}}
          pointerEvents="box-none"
          style={
            Object {
              "alignItems": "center",
              "height": "100%",
              "justifyContent": "flex-end",
              "width": "100%",
            }
          }
        >
          <View
            onLayout={[Function]}
            pointerEvents="box-none"
            style={
              Object {
                "transform": Array [
                  Object {
                    "translateY": 0,
                  },
                ],
                "width": "100%",
              }
            }
          >
            <View
              collapsable={false}
              dataSet={Object {}}
              onMoveShouldSetResponder={[Function]}
              onMoveShouldSetResponderCapture={[Function]}
              onResponderEnd={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderReject={[Function]}
              onResponderRelease={[Function]}
              onResponderStart={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              onStartShouldSetResponderCapture={[Function]}
              style={
                Object {
                  "paddingBottom": 20,
                  "paddingTop": 20,
                }
              }
            />
            <View
              accessibilityViewIsModal={true}
              aria-modal="true"
              dataSet={Object {}}
              onAccessibilityEscape={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#f9fafb",
                  "borderRadius": 0,
                  "borderTopLeftRadius": 20,
                  "borderTopRightRadius": 20,
                  "elevation": 2,
                  "maxHeight": 1184,
                  "overflow": "hidden",
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": 0,
                  },
                  "shadowOpacity": 0.2,
                  "shadowRadius": 1.41,
                  "width": "100%",
                }
              }
            >
              <View
                collapsable={false}
                dataSet={Object {}}
                onMoveShouldSetResponder={[Function]}
                onMoveShouldSetResponderCapture={[Function]}
                onResponderEnd={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderReject={[Function]}
                onResponderRelease={[Function]}
                onResponderStart={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                onStartShouldSetResponderCapture={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "marginTop": -8,
                    "paddingBottom": 12,
                    "paddingTop": 12,
                    "width": "100%",
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": "#a1a1aa",
                      "borderRadius": 2,
                      "height": 4,
                      "width": 40,
                    }
                  }
                />
              </View>
              <RCTScrollView
                contentContainerStyle={
                  Array [
                    Object {},
                    Object {
                      "dataSet": Object {},
                    },
                  ]
                }
                data={
                  Array [
                    Object {
                      "label": "Male",
                      "value": "male",
                    },
                    Object {
                      "label": "Female",
                      "value": "female",
                    },
                  ]
                }
                dataSet={Object {}}
                disableVirtualization={false}
                getItem={[Function]}
                getItemCount={[Function]}
                horizontal={false}
                initialNumToRender={10}
                keyExtractor={[Function]}
                maxToRenderPerBatch={10}
                onContentSizeChange={[Function]}
                onEndReachedThreshold={2}
                onLayout={[Function]}
                onMomentumScrollEnd={[Function]}
                onScroll={[Function]}
                onScrollBeginDrag={[Function]}
                onScrollEndDrag={[Function]}
                removeClippedSubviews={false}
                renderItem={[Function]}
                scrollEventThrottle={50}
                stickyHeaderIndices={Array []}
                style={
                  Object {
                    "width": "100%",
                  }
                }
                updateCellsBatchingPeriod={50}
                viewabilityConfigCallbackPairs={Array []}
                windowSize={21}
              >
                <View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessibilityRole="button"
                      accessibilityState={
                        Object {
                          "selected": true,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      colorScheme="primary"
                      dataSet={Object {}}
                      focusable={true}
                      label="Male"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onHoverIn={[Function]}
                      onHoverOut={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "alignItems": "center",
                          "borderRadius": 4,
                          "flexDirection": "row",
                          "justifyContent": "flex-start",
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                          "width": "100%",
                        }
                      }
                      value="male"
                    >
                      <View
                        dataSet={Object {}}
                        style={
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                          }
                        }
                      >
                        <View
                          dataSet={Object {}}
                          style={Object {}}
                        >
                          <Text
                            dataSet={Object {}}
                            style={
                              Object {
                                "backgroundColor": undefined,
                                "color": "#1f2937",
                                "fontFamily": undefined,
                                "fontSize": 16,
                                "fontStyle": "normal",
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 24,
                                "textDecorationLine": undefined,
                              }
                            }
                          >
                            Male
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessibilityRole="button"
                      accessibilityState={
                        Object {
                          "selected": false,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      colorScheme="primary"
                      dataSet={Object {}}
                      focusable={true}
                      label="Female"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onHoverIn={[Function]}
                      onHoverOut={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "alignItems": "center",
                          "borderRadius": 4,
                          "flexDirection": "row",
                          "justifyContent": "flex-start",
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                          "width": "100%",
                        }
                      }
                      value="female"
                    >
                      <View
                        dataSet={Object {}}
                        style={
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                          }
                        }
                      >
                        <View
                          dataSet={Object {}}
                          style={Object {}}
                        >
                          <Text
                            dataSet={Object {}}
                            style={
                              Object {
                                "backgroundColor": undefined,
                                "color": "#1f2937",
                                "fontFamily": undefined,
                                "fontSize": 16,
                                "fontStyle": "normal",
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 24,
                                "textDecorationLine": undefined,
                              }
                            }
                          >
                            Female
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </RCTScrollView>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;
